一、安装及启动

创建新的数据库集群 initdb -D directory
启动/关闭/重启 pg_ctl -D dirName -l logName  start/stop/restart

二、psql命令

General
\errverbose 	show most recent error message at maximum verbosity

Informational
(options: S = show system objects, + = additional detail)
\dn[S+] [PATTERN]      list schemas
\db[+]  [PATTERN]      list tablespaces
\du[S+] [PATTERN]      list roles
\dg[S+] [PATTERN]      list roles
\dp     [PATTERN]      list table, view, and sequence access privileges
\z      [PATTERN]      same as \dp

Connection
\encoding [ENCODING]   show or set client encoding

Operating System
\timing [on|off]       toggle timing of commands

Formatting
\x [on|off|auto]       toggle expanded output

Input/Output
\i FILE                execute commands from file

-E	启动时加-E，可以打印"\"开头的命令的实际sql
\set ECHO_HIDDEN {on|off}	开关打印"\"开头的命令的实际sql
\set AUTOCOMMIT {on|off}	开关自动提交
\set VERBOSITY verbose	开启详细的错误报告


三、函数
select pg_backend_pid();	显示当前psql进程
select current_setting('transaction_isolation');	查看当前事务级别，相当于show
select pg_size_pretty(pg_relation_size('table_name')); 查看表的大小(不包括索引)
select pg_terminate_backend(pid int);	可以杀死进程
select txid_current();		查看当前事务号

四、sql
增加主键
alter table ldpipe_test.test_types add CONSTRAINT ldpipe_test_test_types_pkey primary KEY(id);

查看表数据，相当于select * from table_name
table table_name	

set命令
set role rolename;	切换角色

五、 pg_controldata
pg_controldata -D /home/hgm/Software/postgresql/pgData2/coordinator	查看当前数据库状态

六、调试
调试 pg_ctl
gdb pg_ctl
set args -D /home/hgm/Software/postgresql/pgDataOriginal/worker1 -l /home/hgm/Software/postgresql/pgDataOriginal/log/worker1_logfile start
break
run

调试postgres
gdb postgres
set args -D "/home/hgm/Software/postgresql/pgDataOriginal/worker1"
break
run

七、函数
pg_current_xlog_location():Report the current WAL write location
pg_xlog_location_diff('xlog2','xlog1'):Compute the difference in bytes between two WAL locations.

八、其他
7.1 生成字符串	repeat(chr(generate_series(65,90)),trunc(random()*10+1)::int);
7.2 jsonb
jsonb[](insert JsonArray)插入insert into bbb values(array[to_jsonb('{"state":2,"name":"kanzheli","time":23132}'::text),to_jsonb('{"state":3,"name":"bushizheli","time":23132}'::text)]);
update bbb set bbbb=array_append(bbb.bbbb,to_jsonb('{"state":4,"name":"hanguanmiao","time":23132}'::text));
7.3 删除某个schema下的table
with table_name as (SELECT n.nspname as "Schema",
  c.relname as "Name"
FROM pg_catalog.pg_class c
     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
WHERE c.relkind IN ('r','v','m','S','f','')
      AND n.nspname <> 'pg_catalog'
      AND n.nspname <> 'information_schema'
      AND n.nspname !~ '^pg_toast'
  AND pg_catalog.pg_table_is_visible(c.oid)
ORDER BY 1,2) select 'drop table if exists '||table_name."Schema"||'.'||table_name."Name" from table_name;
\gexec

死锁查看
```
SELECT blocked_locks.pid     AS blocked_pid,

         blocked_activity.usename  AS blocked_user,

         blocking_locks.pid     AS blocking_pid,

         blocking_activity.usename AS blocking_user,

         blocked_activity.query    AS blocked_statement,

         blocking_activity.query   AS current_statement_in_blocking_process

   FROM  pg_catalog.pg_locks         blocked_locks

    JOIN pg_catalog.pg_stat_activity blocked_activity  ON blocked_activity.pid = blocked_locks.pid

    JOIN pg_catalog.pg_locks         blocking_locks 

        ON blocking_locks.locktype = blocked_locks.locktype

        AND blocking_locks.DATABASE IS NOT DISTINCT FROM blocked_locks.DATABASE

        AND blocking_locks.relation IS NOT DISTINCT FROM blocked_locks.relation

        AND blocking_locks.page IS NOT DISTINCT FROM blocked_locks.page

        AND blocking_locks.tuple IS NOT DISTINCT FROM blocked_locks.tuple

        AND blocking_locks.virtualxid IS NOT DISTINCT FROM blocked_locks.virtualxid

        AND blocking_locks.transactionid IS NOT DISTINCT FROM blocked_locks.transactionid

        AND blocking_locks.classid IS NOT DISTINCT FROM blocked_locks.classid

        AND blocking_locks.objid IS NOT DISTINCT FROM blocked_locks.objid

        AND blocking_locks.objsubid IS NOT DISTINCT FROM blocked_locks.objsubid

        AND blocking_locks.pid != blocked_locks.pid

     JOIN pg_catalog.pg_stat_activity blocking_activity ON blocking_activity.pid = blocking_locks.pid

   WHERE NOT blocked_locks.GRANTED;
```






